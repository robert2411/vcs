# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Set up Apache Maven Central
      uses: actions/setup-java@v3
      with: # running setup-java again overwrites the settings.xml
        distribution: 'temurin'
        java-version: '11'
        server-id: maven # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username in deploy
        server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy

    - name: Build with Maven
      run: |
        echo "on a tag -> set pom.xml <version> to ${GITHUB_REF##*/}"
        mkdir -p ~/.gnupg/
        printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
        gpg --import ~/.gnupg/private.key
        ./mvnw -Psign -B package --file pom.xml
      env:
        GPG_SIGNING_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

    - name: Publish to Apache Maven Central
      run: ./mvnw -Psign -Prelease deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Publish to GitHub Packages Apache Maven
      run: ./mvnw -Psign -Pgithub deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
